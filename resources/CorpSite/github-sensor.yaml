apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github-corpsite-ci
spec:
  eventBusName: codefresh-eventbus
  template:
  dependencies:
    - name: corpsite-dep
      eventSourceName: github
      eventName: corpsite-push
      filters:
        data:
          - path: body.repository.name
            type: string
            value:
              - CorpSite
          - path: body.ref
            type: string
            value:
              - "refs/heads/master"
          # Filter monorepo changes+additions+deletions for only the "prod" subdirectory
          # For anyone interested, the sensorâ€™s dependencies conform to jsonpath. I used these 2 articles to grab the nested arrays for both modified and added files, and then combine them:
          # https://github.com/tidwall/gjson#path-syntax
          # https://github.com/tidwall/gjson/blob/master/SYNTAX.md#multipaths
          # - path: '{body.commits.#.modified,body.commits.#.added,body.commits.#.removed}'
          #   type: string
          #   # Example string: {"modified":[["prod/values.yaml", "prod/chart.yaml"]],"added":[["prod/mynewfile"]],"removed":[["prod/ingress.yaml"]]}
          #   template: '{{ contains "\"prod/" .Input }}'
          #   value:
          #     - "true"
  triggers:
  - template:
      name: corpsite-ci-trigger
      argoWorkflow:
        group: argoproj.io
        version: v1alpha1
        resource: workflows
        operation: submit
        source:
          resource:
            apiVersion: argoproj.io/v1alpha1
            kind: Workflow
            metadata:
              generateName: corpsite-ci-
            spec:
              workflowTemplateRef:
                name: corpsite-ci-wf-tplt
              arguments:
                parameters:
                  - name: REPO
                  - name: REVISION
                  - name: SHA
              volumeClaimTemplates:                 # define volume, same syntax as k8s Pod spec
                - metadata:
                    name: codefresh-volume
                  spec:
                    accessModes: [ "ReadWriteOnce" ]
                    resources:
                      requests:
                        storage: 1Gi
        parameters:
          - src:
              dependencyName: corpsite-dep
              dataKey: body.repository.clone_url
            dest: spec.arguments.parameters.0.value
          - src:
              dependencyName: corpsite-dep
              dataKey: body.ref
            dest: spec.arguments.parameters.1.value
          - src:
              dependencyName: corpsite-dep
              dataKey: body.after
            dest: spec.arguments.parameters.2.value
